{"$message_type":"diagnostic","message":"unused import: `Language`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"packages/singularity-code-analysis/examples/inspect_elixir.rs","byte_start":96,"byte_end":104,"line_start":2,"line_end":2,"column_start":19,"column_end":27,"is_primary":true,"text":[{"text":"use tree_sitter::{Language, Parser};","highlight_start":19,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"packages/singularity-code-analysis/examples/inspect_elixir.rs","byte_start":96,"byte_end":106,"line_start":2,"line_end":2,"column_start":19,"column_end":29,"is_primary":true,"text":[{"text":"use tree_sitter::{Language, Parser};","highlight_start":19,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"packages/singularity-code-analysis/examples/inspect_elixir.rs","byte_start":95,"byte_end":96,"line_start":2,"line_end":2,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"use tree_sitter::{Language, Parser};","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"packages/singularity-code-analysis/examples/inspect_elixir.rs","byte_start":112,"byte_end":113,"line_start":2,"line_end":2,"column_start":35,"column_end":36,"is_primary":true,"text":[{"text":"use tree_sitter::{Language, Parser};","highlight_start":35,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Language`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/singularity-code-analysis/examples/inspect_elixir.rs:2:19\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tree_sitter::{Language, Parser};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}
